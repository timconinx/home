
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

automation: !include automations.yaml

# https
http:
  server_port: 8123
  ssl_certificate: !secret ssl_certificate
  ssl_key: !secret ssl_key
  ip_ban_enabled: true
  login_attempts_threshold: 3

notify:
  - platform: html5
    name: mynotifier
    vapid_pub_key: !secret vapid_pub_key
    vapid_prv_key: !secret vapid_prv_key
    vapid_email: !secret vapid_email

# Text to speech
tts:
  - platform: google_translate

frontend:
  extra_module_url:
    - /hacsfiles/lovelace-card-mod/card-mod.js

spotcast:
  sp_dc: !secret tim_sp_dc
  sp_key: !secret tim_sp_key

recorder:
  db_url: postgresql://@/homeassistant
  exclude:
    domains:
      - media_player
    entities:
      - sensor.time
      - sensor.date
      - sensor.date_time
      - sensor.date_time_utc
      - sensor.date_time_iso
      - sensor.time_date
      - sensor.time_utc
      - sensor.beat
      - sensor.internet_time

logger:
  default: warn
    #logs:
    #homeassistant.components.zha: debug
    #zigpy: debug
    #logs:
    #pytraccar: info
    #homeassistant.components.traccar: info
    #homeassistant.components.device_tracker: info

group: !include groups.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

homeassistant:
  auth_providers:
    - type: homeassistant
    - type: trusted_networks
      trusted_networks:
        - 192.168.1.0/24
      trusted_users:
        192.168.1.116: d532ccf3eda44a4bb67d04d47bd1e199
  media_dirs:
    media: /mnt/NAS/music

shell_command:
  restart_unifi: sudo /home/homeassistant/rootbin/restartunifi.sh
  restart_lms: sudo /home/homeassistant/rootbin/restartlms.sh
  restart_solarconnection: sudo /home/homeassistant/rootbin/restartsolarconnection.sh

zha:
  zigpy_config:
    ota:
      otau_directory: /config/zigpy_ota
      ikea_provider: true

#Nest config
#wgoogle:
#wclient_id: !secret google_client_id
#wclient_secret: !secret google_client_secret
#nest:
#client_id: !secret nest_client_id
#client_secret: !secret nest_client_secret
#project_id: !secret nest_project_id
#subscriber_id: !secret nest_subscriber_id

    #spotify:
    #client_id: !secret spotify_tim_client
    #client_secret: !secret spotify_tim_secret

# Emby
media_player:
  - platform: emby
    host: !secret emby_host
    api_key: !secret emby_api_key

sonoff:
  username: !secret sonoff_username
  password: !secret sonoff_password
# Xiaomi
fan:
  - platform: xiaomi_miio_airpurifier
    name: Humidifier
    host: 192.168.1.227
    token: !secret xiaomi_token
    model: zhimi.humidifier.ca4
  - platform: xiaomi_miio_airpurifier
    name: Steam Humidifier
    host: 192.168.1.19
    token: !secret xiaomi_token2
    model: deerma.humidifier.jsq
      #- platform: xiaomi_miio_fan
      #name: Fan
      #host: 192.168.1.245
      #token: !secret xiaomi_token3
      #model: zhimi.fan.za5

binary_sensor:
  - platform: meteoalarm
    country: "belgium"
    province: "Brabant"
    language: "nl-BE"

sensor:
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'date_time_utc'
      - 'date_time_iso'
      - 'time_date'
      - 'time_utc'
      - 'beat'
  - platform: systemmonitor
    resources:
      - type: memory_use_percent
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: processor_use
      - type: processor_temperature
  - platform: afvalbeheer
    wastecollector: RecycleApp
    resources:
      - restafval
      - gft
      - papier
    postcode: !secret afval_postcode
    streetnumber: !secret afval_number
    streetname: !secret afval_street
    dateobject: 1
    builtiniconsnew: 1
      #- platform: untappd
      #username: !secret untappd_username
      #id: !secret untappd_id
      #secret: !secret untappd_secret
  - platform: fusion_solar_openapi
    credentials:
      username: !secret fusionsolar_username
      password: !secret fusionsolar_password
    plants:
      - id: !secret fusionsolar_station
        name: "zonthuis"
  - platform: statistics
    name: max_electricity_delivery_power_15m
    entity_id: sensor.electricity_delivery_power_15m
    unique_id: maxelectricitydeliverypower15m
    state_characteristic: value_max
    max_age:
      hours: 24    

ourgroceries:
  username: !secret ourgroceries_username
  password: !secret ourgroceries_password

    #device_tracker:
    #- platform: traccar
    #host: localhost
    #verify_ssl: false
    #username: !secret traccar_username
    #password: !secret traccar_password

template:
  - binary_sensor:
    - name: Too much memory
      unique_id: toomuchmemory
      state: "{{ states('sensor.memory_use_percent')|int > 60 }}"
  - binary_sensor:
    - name: Battery Tim Low
      unique_id: batterytimlow
      state: "{{ states('sensor.ac2003_battery_level')|int < 25 }}"
  - binary_sensor:
    - name: Battery Kinders Low
      unique_id: batterykinderslow
      state: "{{ states('sensor.tablet_kinders_battery_level')|int < 25 }}"
  - binary_sensor:
    - name: Battery Sophie Low
      unique_id: batterysophielow
      state: "{{ states('sensor.sophitje_battery_level_2')|int < 25 }}"
  - binary_sensor:
    - name: Humidifier Water Level Low
      unique_id: humidifierwaterlevellow
      state: "{{ state_attr('fan.humidifier', 'water_level')|int < 25 }}"
  - binary_sensor:
    - name: Battery Capacity Low
      unique_id: batterycapacitylow
      state: "{{ states('sensor.battery_state_of_capacity')|int < 3 }}"
  - binary_sensor:
    - name: Restafval Ophaling
      unique_id: restafvalophaling
      state: >
        {% if as_datetime(states('sensor.recycleapp_restafval')) < now().replace(tzinfo=None) %}
          {% if as_datetime(states('sensor.recycleapp_restafval')).day == now().day and now().hour < 9 %}
            True
          {% else %}
            False
          {% endif -%}
        {% else %}
          {% if (as_datetime(states('sensor.recycleapp_restafval')) - now().replace(tzinfo=None)) < timedelta(hours=8) %}
            True
          {% else %}
            False
          {% endif -%}
        {% endif -%}
  - binary_sensor:
    - name: GFT Ophaling
      unique_id: gftophaling
      state: >
        {% if as_datetime(states('sensor.recycleapp_gft')) < now().replace(tzinfo=None) %}
          {% if as_datetime(states('sensor.recycleapp_gft')).day == now().day and now().hour < 9 %}
            True
          {% else %}
            False
          {% endif -%}
        {% else %}
          {% if (as_datetime(states('sensor.recycleapp_gft')) - now().replace(tzinfo=None)) < timedelta(hours=8) %}
            True
          {% else %}
            False
          {% endif -%}
        {% endif -%}
  - binary_sensor:
    - name: Papier Ophaling
      unique_id: papierophaling
      state: >
        {% if as_datetime(states('sensor.recycleapp_papier')) < now().replace(tzinfo=None) %}
          {% if as_datetime(states('sensor.recycleapp_papier')).day == now().day and now().hour < 9 %}
            True
          {% else %}
            False
          {% endif -%}
        {% else %}
          {% if (as_datetime(states('sensor.recycleapp_papier')) - now().replace(tzinfo=None)) < timedelta(hours=8) %}
            True
          {% else %}
            False
          {% endif -%}
        {% endif -%}
  - sensor:
    - name: HP II Kost
      unique_id: hpiikost
      state: >
        {% if states('counter.hp_oj_pages')|int < 10 %}
          0.99
        {%- else -%}
          {{ 0.99 + ((states('counter.hp_oj_pages')|int -1) // 10) }}
        {%- endif %}
  - sensor:
    - name: Bakfiets Oplader status
      unique_id: bakfietsopladerstatus
      state: >
        {% if states('switch.bfoplader') == "off" %}
          off
        {%- elif states('sensor.bfoplader_power')|int < 10 -%}
          not loading
        {%- else -%}
          loading
        {%- endif %}
  - sensor:
    - name: Droogkast status
      unique_id: droogkaststatus
      state: >
        {% if states('sensor.stekker_droogkast_electrical_measurement')|int < 1 %}
          off
        {%- elif states('sensor.stekker_droogkast_electrical_measurement')|int < 50 -%}
          standby
        {%- elif states('sensor.stekker_droogkast_electrical_measurement')|int < 250 -%}
          koude lucht
        {%- else -%}
          drogen
        {%- endif %}
  - sensor:
    - name: Humidifier Water Level
      unique_id: humidifierwaterlevel
      state: "{{ state_attr('fan.humidifier', 'water_level') }}"
  - sensor:
    - name: Berekende Windrichting
      unique_id: berekendewindrichting
      state: >
        {% set wind = {
          "bearing" : state_attr('weather.thuisje_hourly', 'wind_bearing')
        } %}

        {% if wind.bearing < 22 %}
          N
        {%- elif wind.bearing < 67 -%}
          NO
        {%- elif wind.bearing < 112 -%}
          O
        {%- elif wind.bearing < 157 -%}
          ZO
        {%- elif wind.bearing < 202 -%}
          Z
        {%- elif wind.bearing < 247 -%}
          ZW
        {%- elif wind.bearing < 292 -%}
          W
        {%- elif wind.bearing < 337 -%}
          NW
        {%- else -%}
          N
        {%- endif %}
  - sensor:
    - name: CO2Waarde
      unique_id: co2waarde
      state: >
        {% if states('sensor.netatmo_indoor_co2')|int < 700 %}
          Perfect
        {%- elif states('sensor.netatmo_indoor_co2')|int < 900 %}
          Goed
        {%- elif states('sensor.netatmo_indoor_co2')|int < 1100 %}
          OK
        {%- elif states('sensor.netatmo_indoor_co2')|int < 1600 %}
          Middelmatig
        {%- else %}
          Slecht
        {%- endif %}
  - sensor:
    - name: electricity_delivery_power_15m
      unique_id: electricitydeliverypower15m
      unit_of_measurement: "kW"
      state: "{{ (states('sensor.electricity_delivery_15m') | float(0)) * 4 | float }}"
